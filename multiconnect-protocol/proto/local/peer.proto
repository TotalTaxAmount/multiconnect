syntax = "proto2";

package multiconnect.local.peer;

// Sent from the daemon to a client when a peer is found
message L0PeerFound {
  // The packet id
  required uint32 id = 1;
  // The device found
  required bytes device = 2;
}

// Send from the daemon to a client when a peer expires
message L1PeerExpired {
  // The packet id
  required uint32 id = 1;
  // The peer id of the expired peer
  required string peer_id = 2;
}

// Send a request to pair with a peer
message L2PeerPairRequest {
  // The packet id
  required uint32 id = 1;
  // The request uuid
  required string req_uuid = 2;
  // The device in question (when sending the target peer, when recv the peer that send the request)
  required bytes device = 3;
}

// A response to a pair request
message L3PeerPairResponse {
  // The packet id
  required uint32 id = 1;
  // The uuid of the request
  required string req_uuid = 2;
  // If the pair request is accepted or not
  required bool accepted = 3;
} 

// Refresh mdns
message L4Refresh {
  // The packet id
  required uint32 id = 1;
}

// Should be L0 im lazy tho
message L6PeerDiscovered {
  required uint32 id = 1;
  required string peer_id = 2;
}

