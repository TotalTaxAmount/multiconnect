syntax = "proto3";

package multiconnect.peer;

// Sent from the daemon to a client when a peer is found
message PeerFound {
  uint32 id = 1;
  bytes peer = 2;
}

// Send from the daemon to a client when a peer expires
message PeerExpired {
  uint32 id = 1;
  string peer_id = 2;
}

message PeerPairRequest {
  uint32 id = 1;
  bytes peer = 2;
}

message PeerPairResponse {
  uint32 id = 1;
  uint32 req_id = 2;
  bytes peer = 3;
  bool accepted = 4;
}

// Different device types
enum DeviceType {
  ANDROID = 0;
  LAPTOP = 1;
  DESKTOP = 2;
}

// Used to request additional info about a device
message PeerMeta {
  uint32 id = 1;
  string os_name = 2;
  string device_name = 3;
  string mc_version = 4;
  DeviceType type = 5;
  
}
